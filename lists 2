1. Вводится последовательность из n целых чисел.

Например,
list = [23,7,44,5,1,5,2,8,11,3,7,6,9]

Необходимо определить наибольшее целое число, отсутствующее в последовательности, которое меньше любого элемента последовательности, и наименьшее целое число из отсутствующих в последовательности, которое больше любого элемента последовательности
Не использовать встроенные утилиты, типа sort, minimum и т.п.

Попробовать, однако, потом сделать вариант с foldl1.

2. Есть два отсортированных в порядке неубывания списка:
list1 = [1,4,4,6,73,543,624]
list2 = [2,2,4,6,8,8,32,44,56,78,87,89,91,95]
(для начала, числовых)

Получить отсортированный по неубыванию массив list3, состоящий из всех элементов списков list1 и list2 ("слить" их вместе, длина list3 должна быть равна сумме длин list1 и list2).

Никаких вспомогательных функций типа sort, minimum и т.п.!

Проверить работу на списках других типов данных -- должно работать.

3. Реализовать функцию подсчета повторяющегося элемента в списке (задан элемент и список качестве параметров). Попробовать сделать с помощью свертки.

4. Мажорирующим элементом в списке длины n будем называть элемент, встречающийся в списке более n/2 раз. Легко заметить, что в списке может быть не более одного мажорирующего элемента. Например, список

3, 3, 4, 2, 4, 4, 2, 4, 4

имеет мажорирующий элемент 4, тогда как в списке

3, 3, 4, 2, 4, 4, 2, 4

мажорирующего элемента нет.
Необходимо определить, есть ли в списке мажорирующий элемент, и если есть, то какой.

5. Попробовать сделать реализацию вычисления частот всех элементов в списке, не используя массивов и с минимальным числом операций
